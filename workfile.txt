import boto3
import csv

lambda_client = boto3.client('lambda')

def get_lambda_info(function_name):
    response = lambda_client.describe_function(FunctionName=function_name)
    runtime = response['Configuration']['Runtime']
    memory_size = response['Configuration']['MemorySize']
    try:
        provisioned_concurrency = response['Configuration']['ProvisionedConcurrency']
    except KeyError:
        provisioned_concurrency = None
    try:
        ephemeral_storage_size = response['Configuration']['Environment']['Variables']['AWS_LAMBDA_FUNCTION_EPHEMERAL_STORAGE_SIZE']
    except KeyError:
        ephemeral_storage_size = None
    return {
        'FunctionName': function_name,
        'Runtime': runtime,
        'MemorySize': memory_size,
        'ProvisionedConcurrency': provisioned_concurrency,
        'EphemeralStorageSize': ephemeral_storage_size
    }

def generate_report():
    lambdas = lambda_client.list_functions()['Functions']
    report = [get_lambda_info(lambda_['FunctionName']) for lambda_ in lambdas]

    with open('lambda_report.csv', 'w', newline='') as csvfile:
        fieldnames = ['FunctionName', 'Runtime', 'MemorySize', 'ProvisionedConcurrency', 'EphemeralStorageSize']
        writer = csv.DictWriter(csvfile, fieldnames=fieldnames)
        writer.writeheader()
        for row in report:
            writer.writerow(row)

generate_report()
