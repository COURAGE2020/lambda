import boto3
import csv

def lambda_handler(event, context):
    
    # Create a boto3 client to access Lambda
    client = boto3.client('lambda')
    
    # Get a list of all regions
    regions = [r['RegionName'] for r in boto3.client('ec2').describe_regions()['Regions']]
    
    print(regions)
    
    # Create a list to store the function information
    functions_info = []
    
    # Iterate through each region
    for region in regions:
        print(region)
        # Create a boto3 client for the specific region
        region_client = boto3.client('lambda', region_name=region)
        
        next_marker = None
        while True:
            if next_marker is None:
                response = region_client.list_functions(MaxItems=1)
            else:
                response = region_client.list_functions(MaxItems=1, Marker=next_marker)
            functions = response['Functions']
            for function in functions:
                provisioned_concurrency = region_client.list_provisioned_concurrency_configs(FunctionName=function['FunctionName'])
                # print(provisioned_concurrency)
                concurrencies = provisioned_concurrency['ProvisionedConcurrencyConfigs'] 
                if len(concurrencies)>0:
                    for eachProvision in concurrencies:
                        print("Printing Provisions Here")
                        print(eachProvision)
                        # Store the function information in the list
                        functions_info.append({
                            'FunctionName': function['FunctionName'],
                            'Region': region,
                            'Runtime': function['Runtime'],
                            'MemorySize': function['MemorySize'],
                            'EphemeralStorage': function['EphemeralStorage']['Size'],
                            'ProvisionedConcurrency': eachProvision['AllocatedProvisionedConcurrentExecutions']
                        })
                else:
                    functions_info.append({
                        'FunctionName': function['FunctionName'],
                        'Region': region,
                        'Runtime': function['Runtime'],
                        'MemorySize': function['MemorySize'],
                        'EphemeralStorage': function['EphemeralStorage']['Size'],
                        'ProvisionedConcurrency': 'Not Set'
                    })
            next_marker = response.get('NextMarker')
            if not next_marker:
                break
        
    print(functions_info)
    # Write the contents of the CSV file to S3
    s3 = boto3.client('s3')
    csv_content = csv.StringIO()
    fieldnames = ['FunctionName', 'Region', 'Runtime', 'MemorySize', 'ProvisionedConcurrency']
    writer = csv.DictWriter(csv_content, fieldnames=fieldnames)
    writer.writeheader()
    for function_info in functions_info:
        writer.writerow(function_info)
    s3.put_object(Bucket='list-lambdas', Key='lambda_functions_new.csv', Body=csv_content.getvalue())
    
    return 'CSV file written to S3'
